#include <iostream>
using namespace std;

class CircularQueue {
    int* queue;
    int front, rear;
    int capacity;

public:
    // Constructor to initialize the queue with a default capacity
    CircularQueue() {
        capacity = 5;  // Initial capacity
        queue = new int[capacity];
        front = rear = -1;
    }

    // Destructor to free memory
    ~CircularQueue() {
        delete[] queue;
    }

    // Check if the queue is full
    bool isFull() {
        return (rear + 1) % capacity == front;
    }

    // Check if the queue is empty
    bool isEmpty() {
        return front == -1;
    }

    // Insert an element into the queue
    void insert(int value) {
        if (isFull()) {
            cout << "Queue is Full!" << endl;
        } else {
            if (front == -1) {
                front = rear = 0;  // First element
            } else {
                rear = (rear + 1) % capacity;
            }
            queue[rear] = value;
            cout << "Inserted: " << value << endl;
        }
    }

    // Delete an element from the queue
    void deleteElement() {
        if (isEmpty()) {
            cout << "Queue is Empty!" << endl;
        } else {
            cout << "Deleted: " << queue[front] << endl;
            if (front == rear) {
                front = rear = -1;  // Queue becomes empty
            } else {
                front = (front + 1) % capacity;
            }
        }
    }

    // Display the elements of the queue
    void display() {
        if (isEmpty()) {
            cout << "Queue is Empty!" << endl;
        } else {
            cout << "Queue elements: ";
            int i = front;
            while (i != rear) {
                cout << queue[i] << " ";
                i = (i + 1) % capacity;
            }
            cout << queue[rear] << endl;  // Display the rear element
        }
    }
};

int main() {
    CircularQueue cq;
    int choice;

    while (true) {
        cout << "\nMenu:" << endl;
        cout << "1. Insert" << endl;
        cout << "2. Delete" << endl;
        cout << "3. Display" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                {
                    int value;
                    cout << "Enter value to insert: ";
                    cin >> value;
                    cq.insert(value);
                    break;
                }
            case 2:
                cq.deleteElement();
                break;
            case 3:
                cq.display();
                break;
            case 4:
                cout << "Exiting..." << endl;
                return 0;
            default:
                cout << "Invalid choice! Try again." << endl;
        }
    }

    return 0;
}
