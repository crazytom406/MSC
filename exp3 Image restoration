clc; clear; close all;

% Load and convert to double
I = im2double(imread('cameraman.tif'));

% Create a motion blur point spread function
PSF = fspecial('motion', 30, 45);

% Apply motion blur
degraded_I = imfilter(I, PSF, 'conv', 'circular');

% Display degraded image
subplot(3,3,1);
imshow(I);
title('Original Image');

subplot(3,3,2);
imshow(degraded_I);
title('Degraded Image');

% Median filtering
degraded_I_median = medfilt2(degraded_I);
subplot(3,3,3);
imshow(degraded_I_median);
title('Median Filtered Image');

% Gaussian filtering
degraded_I_smooth = imgaussfilt(degraded_I, 1);
subplot(3,3,4);
imshow(degraded_I_smooth);
title('Gaussian Filtered Image');

% Estimate noise
noise_var = var(I(:) - degraded_I(:));

% Wiener deconvolution
restored_Wiener = deconvwnr(degraded_I, PSF, noise_var);
subplot(3,3,5);
imshow(restored_Wiener);
title('Wiener Deconvolution');

% Lucy-Richardson deconvolution
restored_LR = deconvlucy(degraded_I, PSF, 20);
subplot(3,3,6);
imshow(restored_LR);
title('Lucy-Richardson Deconvolution');

% Total Variation Regularization
restored_TV = deconvreg(degraded_I, PSF, 0.01);
subplot(3,3,7);
imshow(restored_TV);
title('Total Variation Regularization');
